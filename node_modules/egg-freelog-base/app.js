/**
 * Created by yuliang on 2017/8/9.
 */

'use strict'

const koaValidate = require('koa-validate')
const globalInfo = require('./globalInfo')
const retCodeEnum = require('./app/enum/ret_code')
const errCodeEnum = require('./app/enum/err_code')
const validateExtend = require('./app/extend/validate')
const loaderCustomDir = require('./lib/loader-custom-dir')

module.exports = app => {

    /**
     * 自动拓展koa-validate校验库
     */
    if (app.validateExtend && app.type.object(app.validateExtend)) {
        Object.assign(koaValidate.Validator.prototype, app.validateExtend)
    }

    /**
     * http参数相关验证框架,
     * WIKI:https://github.com/RocksonZeta/koa-validate
     */
    koaValidate(app)

    /**
     * 基础插件中已扩展部分校验方式
     */
    Object.assign(koaValidate.Validator.prototype, validateExtend)

    /**
     * 一级错误码拓展
     */
    if (app.type.object(app.config.freelogBase.retCodeEnum)) {
        app.retCodeEnum = Object.assign(app.config.retCodeEnum || {}, retCodeEnum)
    }

    /**
     * 二级错误码拓展
     */
    if (app.type.object(app.config.freelogBase.errCodeEnum)) {
        app.errCodeEnum = Object.assign(app.config.errCodeEnum || {}, errCodeEnum)
    }

    setImmediate(() => loaderCustomDir(app))

    /**
     * 未捕获的Promise-reject异常处理
     */
    process.on('unhandledRejection', err => {
        console.log("process-on-unhandledRejection,[detail]:" + err.stack || err.toString())
    })

    /**
     * 未捕获的error异常处理
     */
    process.on('uncaughtException', err => {
        console.log("process-on-uncaughtException,[detail]:" + err.stack || err.toString())
    })

    globalInfo.app = app
}
