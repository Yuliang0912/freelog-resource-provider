'use strict'

const retCode = require('../enum/ret_code')
const errCode = require('../enum/err_code')

//基础错误类型
const ApplicationErrorBase = module.exports.ApplicationErrorBase = class ApplicationErrorBase extends Error {

    constructor(message, ...args) {

        super()
        var errorName = this.constructor.name

        this.data = args[0]
        this.name = errorName
        this.message = message
        this.retCode = retCode.success
        this.errCode = errCode[errorName.replace(errorName[0], errorName[0].toLowerCase())] || errCode.applicationError
    }
}

//逻辑错误
module.exports.LogicError = class LogicError extends ApplicationErrorBase {
}

//网络错误
module.exports.NetworkError = class NetworkError extends ApplicationErrorBase {
}

//参数错误
module.exports.ArgumentError = class ArgumentError extends ApplicationErrorBase {
}

//应用程序内部错误
module.exports.ApplicationError = class ApplicationError extends ApplicationErrorBase {
}

//授权错误
module.exports.AuthorizationError = class AuthorizationError extends ApplicationErrorBase {
}

//API调用错误
module.exports.ApiInvokingError = class ApiInvokingError extends ApplicationErrorBase {
}

//认证错误
module.exports.AuthenticationError = class AuthenticationError extends ApplicationErrorBase {
}

//网关授权错误
module.exports.GatewayAuthorizationError = class GatewayAuthorizationError extends ApplicationErrorBase {
    constructor() {
        super(...arguments)
        this.retCode = retCode.agentError
        this.errCode = errCode.authorizationError
    }
}

//网关认证错误
module.exports.GatewayAuthenticationError = class GatewayAuthenticationError extends ApplicationErrorBase {
    constructor() {
        super(...arguments)
        this.retCode = retCode.agentError
        this.errCode = errCode.authenticationError
    }
}

//网关服务器组件调用异常
module.exports.GatewayComponentInvokingError = class GatewayComponentInvokingError extends ApplicationErrorBase {
    constructor() {
        super(...arguments)
        this.retCode = retCode.agentError
        this.errCode = errCode.gatewayHttpComponentInvokingError
    }
}

// //网关路由匹配错误
module.exports.GatewayRouterMatchError = class GatewayRouterMatchError extends ApplicationErrorBase {
    constructor() {
        super(...arguments)
        this.retCode = retCode.agentError
    }
}

//网关上游API调用错误
module.exports.GatewayUpstreamApiError = class GatewayUpstreamApiError extends ApplicationErrorBase {
    constructor() {
        super(...arguments)
        this.retCode = retCode.agentError
    }
}

//网关参数错误
module.exports.GatewayArgumentError = class GatewayArgumentError extends ApplicationErrorBase {
    constructor() {
        super(...arguments)
        this.retCode = retCode.agentError
        this.errCode = errCode.argumentError
    }
}

// 统一export,webStorm引用时不变颜色.不方便区分
// module.exports = {
//     ApplicationErrorBase,
//     LogicError,
//     NetworkError,
//     ArgumentError,
//     ApplicationError,
//     ApiInvokingError,
//     AuthorizationError,
//     AuthenticationError,
//     GatewayArgumentError,
//     GatewayRouterMatchError,
//     GatewayUpstreamApiError,
//     GatewayAuthorizationError,
//     GatewayAuthenticationError,
//     GatewayComponentInvokingError,
// }


