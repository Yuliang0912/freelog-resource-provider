/**
 * Created by yuliang on 2017/8/9.
 */

'use strict'

const validator = require('validator')
const arrayExpand = require('./helper/array_expands')
const stringExpand = require('./helper/string_expands')
const cryptoHelper = require('./helper/crypto_helper')
const commonRegex = require('./helper/common_regex')
const policySegmentIdGenerator = require('./helper/policy_segment_id_generator')
const {ApiInvokingError} = require('../error/index')

module.exports = {

    /**
     * 自定义字符串拓展
     */
    stringExpand,

    /**
     * 自定义数组拓展
     */
    arrayExpand,

    /**
     * 加密相关帮助类
     */
    cryptoHelper,

    /**
     * 常用的正则表达式
     */
    commonRegex,

    /**
     * 常用的校验库
     * wiki : https://github.com/chriso/validator.js
     */
    validator,

    /**
     * 获取内部API返回结果
     */
    convertApiResult(data, url, options) {
        if (!data) {
            return Promise.reject(new ApiInvokingError('api data is null', {url, options}))
        }
        if (!Reflect.has(data, 'ret') || !Reflect.has(data, 'errcode')) {
            return Promise.reject(new ApiInvokingError('api data is error format', {url, options}))
        }
        if (data.ret !== 0 || data.errcode !== 0) {
            return Promise.reject(new ApiInvokingError(data.msg || 'null error msg', {url, options, data: data.data}))
        }
        return data.data
    },

    /**
     * policy|presentable段落ID生成器
     */
    policySegmentIdGenerator
}