[
  {
    "name": "upload-file",
    "methods": [
      "POST"
    ],
    "paramNames": [],
    "path": "/v1/resources/temporaryFiles/uploadResourceFile",
    "regexp": "/^\\/v1\\/resources\\/temporaryFiles\\/uploadResourceFile(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "upload-preview-image",
    "methods": [
      "POST"
    ],
    "paramNames": [],
    "path": "/v1/resources/temporaryFiles/uploadPreviewImage",
    "regexp": "/^\\/v1\\/resources\\/temporaryFiles\\/uploadPreviewImage(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-convert-resource",
    "methods": [
      "POST"
    ],
    "paramNames": [
      {
        "name": "mockId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/mocks/:mockId/convert",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/((?:[^\\/]+?))\\/convert(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "rebuild-schemeId",
    "methods": [
      "POST"
    ],
    "paramNames": [],
    "path": "/v1/releases/versions/rebuildSchemeId",
    "regexp": "/^\\/v1\\/releases\\/versions\\/rebuildSchemeId(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-file",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/resources/file",
    "regexp": "/^\\/v1\\/resources\\/file(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-list",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/resources/list",
    "regexp": "/^\\/v1\\/resources\\/list(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-releases",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "resourceId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/:resourceId/releases",
    "regexp": "/^\\/v1\\/resources\\/((?:[^\\/]+?))\\/releases(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-joined-releases",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/resources/releases",
    "regexp": "/^\\/v1\\/resources\\/releases(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-sign-url",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "resourceId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/:resourceId/signedResourceInfo",
    "regexp": "/^\\/v1\\/resources\\/((?:[^\\/]+?))\\/signedResourceInfo(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resource-sign-url",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "mockResourceId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/mocks/:mockResourceId/signedMockResourceInfo",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/((?:[^\\/]+?))\\/signedMockResourceInfo(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "bucket-is-exist",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/resources/mocks/buckets/isExist",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/buckets\\/isExist(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-name-is-exist",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/resources/mocks/isExistMockName",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/isExistMockName(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-list",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/releases/list",
    "regexp": "/^\\/v1\\/releases\\/list(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-scheme-list",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/releases/versions/list",
    "regexp": "/^\\/v1\\/releases\\/versions\\/list(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-detail-info",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "username",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      },
      {
        "name": "releaseName",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/detail/:username/:releaseName",
    "regexp": "/^\\/v1\\/releases\\/detail\\/((?:[^\\/]+?))\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-auth-tree",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "releaseId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:releaseId/authTree",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))\\/authTree(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-upcast-tree",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "releaseId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:releaseId/upcastTree",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))\\/upcastTree(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-dependency-tree",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "releaseId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:releaseId/dependencyTree",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))\\/dependencyTree(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-detail",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/releases/detail",
    "regexp": "/^\\/v1\\/releases\\/detail(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resource-detail",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/releases/mocks/detail",
    "regexp": "/^\\/v1\\/releases\\/mocks\\/detail(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-max-satisfying-version",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/releases/maxSatisfyingVersion",
    "regexp": "/^\\/v1\\/releases\\/maxSatisfyingVersion(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-download",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "resourceId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/:resourceId/download",
    "regexp": "/^\\/v1\\/resources\\/((?:[^\\/]+?))\\/download(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resource-download",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "mockResourceId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/mocks/:mockResourceId/download",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/((?:[^\\/]+?))\\/download(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resource-dependencyTree",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "mockResourceId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/mocks/:mockResourceId/dependencyTree",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/((?:[^\\/]+?))\\/dependencyTree(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-is-collection",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/collections/releases/isCollection",
    "regexp": "/^\\/v1\\/collections\\/releases\\/isCollection(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "bucket-count",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/resources/mocks/buckets/count",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/buckets\\/count(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-version-resource-info",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "releaseId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      },
      {
        "name": "version",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:releaseId/versions/:version/resource",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))\\/versions\\/((?:[^\\/]+?))\\/resource(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-scheme-retry-sign-contract",
    "methods": [
      "PUT"
    ],
    "paramNames": [
      {
        "name": "releaseId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      },
      {
        "name": "version",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:releaseId/versions/:version/retrySignContracts",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))\\/versions\\/((?:[^\\/]+?))\\/retrySignContracts(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-infos",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/releases",
    "regexp": "/^\\/v1\\/releases(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-infos",
    "methods": [
      "POST"
    ],
    "paramNames": [],
    "path": "/v1/releases",
    "regexp": "/^\\/v1\\/releases(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-info",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:id",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-info",
    "methods": [
      "PATCH",
      "PUT"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:id",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-scheme-infos",
    "methods": [
      "POST"
    ],
    "paramNames": [
      {
        "name": "releaseId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:releaseId/versions",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))\\/versions(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-scheme-info",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "releaseId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      },
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:releaseId/versions/:id",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))\\/versions\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "release-scheme-info",
    "methods": [
      "PATCH",
      "PUT"
    ],
    "paramNames": [
      {
        "name": "releaseId",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      },
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/releases/:releaseId/versions/:id",
    "regexp": "/^\\/v1\\/releases\\/((?:[^\\/]+?))\\/versions\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resource-buckets",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/resources/mocks/buckets",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/buckets(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resource-buckets",
    "methods": [
      "POST"
    ],
    "paramNames": [],
    "path": "/v1/resources/mocks/buckets",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/buckets(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "destroy_mock-resource-bucket",
    "methods": [
      "DELETE"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/mocks/buckets/:id",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/buckets\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resources",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/resources/mocks",
    "regexp": "/^\\/v1\\/resources\\/mocks(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resources",
    "methods": [
      "POST"
    ],
    "paramNames": [],
    "path": "/v1/resources/mocks",
    "regexp": "/^\\/v1\\/resources\\/mocks(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resource",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/mocks/:id",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "mock-resource",
    "methods": [
      "PATCH",
      "PUT"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/mocks/:id",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "destroy_mock-resource",
    "methods": [
      "DELETE"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/mocks/:id",
    "regexp": "/^\\/v1\\/resources\\/mocks\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "collection-infos",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/collections/releases",
    "regexp": "/^\\/v1\\/collections\\/releases(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "collection-infos",
    "methods": [
      "POST"
    ],
    "paramNames": [],
    "path": "/v1/collections/releases",
    "regexp": "/^\\/v1\\/collections\\/releases(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "collection-info",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/collections/releases/:id",
    "regexp": "/^\\/v1\\/collections\\/releases\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "destroy_collection-info",
    "methods": [
      "DELETE"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/collections/releases/:id",
    "regexp": "/^\\/v1\\/collections\\/releases\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-infos",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [],
    "path": "/v1/resources",
    "regexp": "/^\\/v1\\/resources(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-infos",
    "methods": [
      "POST"
    ],
    "paramNames": [],
    "path": "/v1/resources",
    "regexp": "/^\\/v1\\/resources(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-info",
    "methods": [
      "HEAD",
      "GET"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/:id",
    "regexp": "/^\\/v1\\/resources\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  },
  {
    "name": "resource-info",
    "methods": [
      "PATCH",
      "PUT"
    ],
    "paramNames": [
      {
        "name": "id",
        "prefix": "/",
        "delimiter": "/",
        "optional": false,
        "repeat": false,
        "partial": false,
        "asterisk": false,
        "pattern": "[^\\/]+?"
      }
    ],
    "path": "/v1/resources/:id",
    "regexp": "/^\\/v1\\/resources\\/((?:[^\\/]+?))(?:\\/(?=$))?$/",
    "stack": [
      "wrappedController"
    ]
  }
]